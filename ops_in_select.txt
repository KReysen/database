1. Write out a generic SELECT statement.

SELECT something FROM atable (WHERE condition);

2. Create a fun way to remember the order of operations in a SELECT statement, such as a mnemonic.
SFW - safe for work, because select statements are work appropriate

3. Given this dogs table, write queries to select the following pieces of data:

Intake teams typically guess the breed of shelter dogs, so the breed column may have multiple words (for example, "Labrador Collie mix").

--Display the name, gender, and age of all dogs that are part Labrador.
SELECT name, gender, age FROM dogs WHERE breed LIKE '%labrador%';

--Display the ids of all dogs that are under 1 year old.
SELECT id FROM dogs WHERE age < 1;

--Display the name and age of all dogs that are female and over 35lbs.
SELECT name, age FROM dogs WHERE gender='F' AND weight > 35;

--Display all of the information about all dogs that are not Shepherd mixes.
SELECT * FROM dogs WHERE breed NOT LIKE '%shepherd%';

--Display the id, age, weight, and breed of all dogs that are either over 60lbs or Great Danes.
SELECT id, age, weight, breed FROM dogs WHERE weight > 60 OR breed LIKE 'great dane';

4. Given this cats table, what records are returned from these queries?

--SELECT name, adoption_date FROM cats;
   name   | adoption_date
----------+---------------
 Mushi    | 2016-03-22
 Seashell |
 Azul     | 2016-04-17
 Victoire | 2016-09-01
 Nala     |
(5 rows)
--SELECT name, age FROM cats;
  name   | age
----------+-----
 Mushi    |   1
 Seashell |   7
 Azul     |   3
 Victoire |   7
 Nala     |   1
(5 rows)

5. From the cats table, write queries to select the following pieces of data.

--Display all the information about all of the available cats.
SELECT * FROM cats;

--Display the name and sex of all cats who are 7 years old.
SELECT name, gender FROM cats WHERE age=7;

--Find all of the names of the cats, so you don’t choose duplicate names for new cats.
SELECT name FROM cats;

6. List each comparison operator and explain when you would use it. Include a real world example for each.
If you can’t list these from memory, do these flashcards until you can!
Greater than >  When you want results larger than a certain value, like all days with temperatures above freezing
Greather than or equal to >= When you want results larger than or including a certain value, like you must be at least 48 inches to ride this attraction
Less than <  Results smaller than a certain value, like you must throw back caught fish below 10 inches in length
Less than or equal to <= Smaller than or including a certain value, like a kids menu for patrons 10 and under
Equal to =  Select something exactly equal to what you specify, like all students with last name 'Jones'
Is not equal to != or <>  Select everything that ISN'T equal to what you specify, like all fantasy football players that are NOT suspended


7. From the cats table, what data is returned from these queries?

--SELECT name FROM cats WHERE gender = ‘F’;
ERROR:  column "‘f’" does not exist
LINE 1: SELECT name FROM cats WHERE gender = ‘F’;
                                             ^

(if you change the query to not give an error, you get:
SELECT name FROM cats WHERE gender='F';
   name
----------
 Seashell
 Nala
(2 rows)
--SELECT name FROM cats WHERE age <> 3;
   name
----------
 Mushi
 Seashell
 Victoire
 Nala
(4 rows)
--SELECT ID FROM cats WHERE name != ‘Mushi’ AND gender = ‘M’;
 id
----
  3
  4
(2 rows)